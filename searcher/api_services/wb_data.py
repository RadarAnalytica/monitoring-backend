import asyncio

from aiohttp import ClientSession


async def get_today_product_list_data(product_wb_id_list: list[int], rqa=3):
    product_wb_id_list = sorted(product_wb_id_list)
    result_status = 0
    count = 0
    async with ClientSession() as http_session:
        while result_status != 200 or count >= rqa:
            count += 1
            try:
                async with http_session.get('https://card.wb.ru/cards/v3/detail', params={
                    'appType': 1,
                    'curr': 'rub',
                    'dest': -1257786,
                    'spp': 30,
                    'nm': ";".join([str(p_id) for p_id in product_wb_id_list])
                }) as resp:
                    result_status = resp.status
                    if result_status != 200:
                        print(result_status, "ошибка")
                        return
                    _data = await resp.json()
                    products = [p.get("id") for p in _data.get('data').get('products')]
                    print(len(products))
                    print([y for y in product_wb_id_list if y not in products])
                    return


            except Exception as error:
                print(f'Error on products {product_wb_id_list}: {result_status} ::: (Error: {error}) sleep: {count * 0.2}')
                _data = ''
                result_status = 0
                await asyncio.sleep(count * 0.2)
                count += 1
#
# x = [2088, 93292, 108362, 108364, 108371, 110235, 110238, 110361, 110375, 111727, 126947, 126949, 126951, 129039, 131410, 133034, 133036, 133057, 133060, 135314, 138558, 138559, 138886, 139221, 149349, 153311, 153335, 153393, 158025, 162810, 162812, 162814, 162819, 162823, 162824, 162827, 169110, 175717, 176013, 178164, 178176, 178290, 178709, 193777, 194766, 204867, 204924, 208606, 212774, 213914, 213915, 213916, 213917, 215757, 226574, 226576, 226583, 226584, 226600, 226602, 226604, 226609, 230821, 230840, 230842, 230844, 241103, 241104, 241135, 241137, 241149, 241162, 241195, 241197, 241201, 241202, 242524, 242554, 244859, 244861, 247158, 247452, 248502, 249473, 257566, 259538, 264209, 270839, 274222, 279270, 279271, 279982, 282144, 282156, 282171, 282179, 282208, 282209, 284494, 284498, 284507, 284517, 284536, 284545, 284670, 286715, 286846, 286847, 290817, 290820, 291772, 291774, 291807, 291808, 291815, 291839, 291840, 293777, 311024, 311135, 318452, 318611, 324139, 325617, 326044, 326048, 326052, 330121, 330123, 333233, 335963, 335967, 335982, 335991, 335996, 336039, 336040, 336052, 336080, 336088, 336103, 336104, 336109, 336113, 336119, 336128, 336140, 336143, 336151, 336154, 336169, 336171, 336194, 336207, 336211, 336229, 336239, 336246, 336250, 336270, 336281, 336283, 336288, 336302, 336303, 336311, 336314, 336324, 336325, 336331, 336337, 336398, 336416, 336419, 336422, 336424, 336425, 336441, 336442, 336464, 337265, 349014, 353931, 353932, 357614, 360310, 360312, 360315, 360319, 365073, 365074, 365075, 365081, 365084, 365180, 365181, 365182, 365183, 365188, 365189, 365190, 365233, 366862, 367404, 367411, 370174, 374801, 374802, 374803, 374808, 374818, 374820, 374823, 374824, 374826, 376133, 384266, 385221, 385222, 385223, 386852, 390666, 390669, 391655, 391687, 391898, 395076, 401345, 405151, 405156, 405159, 405163, 405167, 405487, 409391, 410338, 413193, 413194, 413195, 413196, 413205, 413206, 413207, 413208, 413210, 413216, 413244, 413245, 415885, 415902, 422470, 422497, 422498, 423852, 423901, 423989, 424238, 424283, 424808, 424814, 425327, 425342, 426215, 426232, 426253, 426271, 426280, 428795, 434223, 434226, 434232, 434250, 434251, 440283, 440284, 440771, 440836, 441572, 441578, 443216, 443256, 449677, 450399, 455964, 461147, 463925, 463928, 466424, 467286, 467294, 467303, 467306, 467309, 467311, 467312, 467327, 467334, 467335, 467337, 467339, 467342, 467349, 467351, 467354, 467367, 467369, 467373, 467374, 467375, 467376, 467377, 467378, 467387, 472432, 478538, 478577, 478606, 478612, 479532, 479544, 481919, 481920, 484035, 484043, 484094, 484097, 484102, 484116, 484132, 485218, 485230, 490853, 492989, 496124, 497187, 501603, 501614, 509493, 509776, 509782, 513669, 518291, 518807, 520058, 523316, 524437, 525453, 526803, 556489, 568459, 568476, 568480, 574301, 575069, 575335, 576486, 576487, 576488, 576493, 576504, 578144, 578146, 578680, 578681, 579773, 579792, 579816, 580196, 586371, 586460, 586461, 588808, 590268, 590277, 590301, 590302, 590310, 590311, 590314, 590319, 597418, 601979, 601996, 602002, 602589, 602590, 605322, 606827, 606855, 610586, 610587, 610588, 610589, 610590, 610591, 610592, 613529, 622346, 625933, 627443, 629375, 630408, 630409, 630410, 630411, 630412, 630418, 630419, 630420, 630421, 630425, 630426, 630430, 632219, 632569, 633290, 634099, 634103, 634104, 634105, 634106, 634107, 634143, 634262, 634287, 634288, 639269, 639305, 639326, 639327, 639343, 642429, 645834, 645842, 645860, 647494, 650274, 650287, 650743, 650750, 651775, 651776, 651777, 651778, 651779, 651780, 651782, 651785, 651786, 651787, 651788, 651791, 651792, 651793, 651794, 651797, 651798, 651801, 651802, 651805, 651806, 651810, 651820, 651821, 651822, 651823, 651826, 651827, 651830, 651831, 652959, 653007, 653021, 653026, 653065, 655623, 665853, 665858, 665860, 665863, 665864, 665866, 665867, 665868, 665869, 665870, 665871, 665872, 665873, 665875, 665876, 665880, 665881, 665889, 667506, 669190, 669312, 677115, 677122, 677124, 677137, 677139, 677140, 677141, 677142, 677143, 677145, 680236, 680253, 680254, 680299, 680339, 680347]
# print(len(x))
# asyncio.run(get_today_product_list_data(x))
